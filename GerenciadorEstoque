package gerenciador_estoque;
import java.util.ArrayList;
import java.util.Scanner;

class Produto {
	private String nome;
	private String codigo;
	private double preco;
	private int quantidadeEstoque;
	private String fornecedor;

	public Produto(String nome, String codigo, double preco, int quantidadeEstoque, String fornecedor) {
		this.nome = nome;
		this.codigo = codigo;
		this.preco = preco;
		this.quantidadeEstoque = quantidadeEstoque;
		this.fornecedor = fornecedor;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getCodigo() {
		return codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	public double getPreco() {
		return preco;
	}

	public void setPreco(double preco) {
		this.preco = preco;
	}

	public int getQuantidadeEstoque() {
		return quantidadeEstoque;
	}

	public void setQuantidadeEstoque(int quantidadeEstoque) {
		this.quantidadeEstoque = quantidadeEstoque;
	}

	public String getFornecedor() {
		return fornecedor;
	}

	public void setFornecedor(String fornecedor) {
		this.fornecedor = fornecedor;
	}
}

class Estoque {
	ArrayList<Produto> produtos = new ArrayList<>();

	public void cadastrarProduto(Produto produto) {
		produtos.add(produto);
		System.out.println("Produto cadastrado com sucesso!");
	}

	public void realizarVenda(String codigo, int quantidade) {
		for (Produto produto : produtos) {
			if (produto.getCodigo().equals(codigo)) {
				if (produto.getQuantidadeEstoque() >= quantidade) {
					produto.setQuantidadeEstoque(produto.getQuantidadeEstoque() - quantidade);
					System.out.println("Venda realizada com sucesso!");
					return;
				} else {
					System.out.println("Quantidade insuficiente em estoque!");
					return;
				}
			}
		}
		System.out.println("Produto não encontrado!");
	}

	public void listarProdutos() {
		for (Produto produto : produtos) {
			System.out.println("Nome: " + produto.getNome() + ", Código: " + produto.getCodigo() + ", Preço: "
					+ produto.getPreco() + ", Quantidade em estoque: " + produto.getQuantidadeEstoque()
					+ ", Fornecedor: " + produto.getFornecedor());
		}
	}

	public void listarProdutosEstoqueBaixo(int quantidadeMinima) {
		for (Produto produto : produtos) {
			quantidadeMinima = 5;
			if (produto.getQuantidadeEstoque() < quantidadeMinima) {
				System.out.println(
						"Nome: " + produto.getNome() + ", Quantidade em estoque: " + produto.getQuantidadeEstoque());
			}
		}
	}

	public Produto buscarProduto(String codigo, String nome) {
		for (Produto produto : produtos) {
			if (produto.getCodigo().equals(codigo) || produto.getNome().equals(nome)) {
				return produto;
			}
		}
		return null;
	}

	public double calcularValorTotalEstoque() {
		double total = 0;
		for (Produto produto : produtos) {
			total += produto.getPreco() * produto.getQuantidadeEstoque();
		}
		return total;
	}
}

